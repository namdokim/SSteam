<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- 스프링 안에서 Controller용도로 객체생성요청 bean 등록하는 곳 -->
	
	<!-- 서블릿 용으로 사용하는 bean만 등록 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> <!-- 어노테이션을 사용할 것이다 -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /><!-- 	/resources/**로 들어오면 /resources/로 보냄 -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- InternalResourceViewResolver를 servlet 객체로 등록요청 / String형태로 받음 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일 업로드시 필요한 multipart 받는 reslover 클래스 등록 / 이미지형태도 받는게 가능
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	
	<beans:bean id="uploadPath" class="java.lang.String">
		빈 생성자 안에 value값 지정
		<beans:constructor-arg value="D:/JG/sts-workspace/uploadFiles"/>
	</beans:bean>
	 -->
	<!-- 파일 업로드 리졸버  -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	<!-- 패키지 경로  -->
	<context:component-scan base-package="com.ss.demo" />
	
	<!-- 웹 소켓 -->
	<websocket:handlers>
		<websocket:mapping handler = "chattingHandler" path = "/chatting"/>
		<websocket:sockjs> </websocket:sockjs>
	</websocket:handlers>
	<beans:bean id = "chattingHandler" class = "com.ss.demo.controller.ChattingHandler"/>
</beans:beans>


