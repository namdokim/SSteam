<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 	다른 모든 웹 구성 요소에 표시되는 공유 리소스를 정의합니다. -->
	<!-- 	객체생성을 요청하는 bean을 등록하는 곳 -->
	
	<!-- 	빈에다가 등록해서  객체생성을 요청함 -->
	<!-- 	예시 : <bean class=""></bean> -->
	
	<!-- 스프링과 DB연결 06-16 -->
	<bean id="db" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/ss?useSSL=false&amp;serverTimezone=UTC" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>
		
	<!-- MyBatis사용하기 위한 bean 06-16 -->
	<!-- MyBatis 설정파일을 바탕으로 SqlSessionFactory를 생성한다, Spring Bean으로 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 위에 빈 id가 db인 jdbc드라이버를 사용하는설정 -->
		<property name="dataSource" ref="db"></property>
		<!-- resources안에 mappers패키지 하위 폴더에 xml파일 찾기 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
		<!-- resources안에 config패키지 하위 폴더에 mybatis_config.xml파일 찾기 -->
		<property name="configLocation" value="classpath:config/mybatis_config.xml"></property>
	</bean>
	
	<!-- 마이바티스 프레임워크 객체 -->
	<!-- SQL 실행이나 트랜잭션 관리를 실행한다. SqlSession 인터페이스를 구현하고 Spring Bean으로 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 위에 sqlSessionFactory를 참조해서 프레임워크 객체 sqlSession을 만들고 사용 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 메일 인증용 메일 보내기 -->
	<!-- 비밀번호 ${email.password}로 우선 감추기-->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="comfoop007@gmail.com" />
		<property name="password" value="${email.password}" />
		<property name="javaMailProperties">
		<props>
			<prop key="mail.transport.protocol">smtp</prop>
			<prop key="mail.smtp.auth">true</prop>
			<!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.debug">true</prop>
			<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
			<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			<prop key="mail.smtp.ssl.enable">false</prop>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
		</props>
		</property>
	</bean>
	
 	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>

	
</beans>
